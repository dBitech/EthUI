{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple Ethernet Service",
    "description": "An API that accepts a simple Ethernet object and converts it to a MEF SCA object on the server side",
    "termsOfService": "",
    "contact": {
      "name": "Jeff Groom",
      "email": "jgroom33@outlook.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "0.0.0.0:10010",
  "basePath": "/api",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/ethsvc": {
      "x-swagger-router-controller": "Default",
      "get": {
        "description": "Gets list of all Ethernet services",
        "operationId": "getEthSvc",
        "responses": {
          "200": {
            "description": "ethsvc response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ethsvc"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new Ethernet Service in the network.  Duplicates are allowed",
        "operationId": "addEthSvc",
        "parameters": [{
          "name": "Service",
          "in": "body",
          "description": "Ethernet Service to add",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Ethsvc"
          }
        }],
        "responses": {
          "200": {
            "description": "ethernet service response",
            "schema": {
              "$ref": "#/definitions/Ethsvc"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ethsvc/{id}": {
      "x-swagger-router-controller": "Default",
      "get": {
        "description": "Returns an Ethernet Service based on a single ID",
        "operationId": "getEthSvcbyID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "ID of Ethernet Service to fetch",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "Ethernet Service response",
            "schema": {
              "$ref": "#/definitions/Ethsvc"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single Ethernet Service based on the ID supplied",
        "operationId": "deleteEthSvc",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "ID of Ethernet Service to delete",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "204": {
            "description": "ethernet service deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hello": {
      "x-swagger-router-controller": "hello_world",
      "get": {
        "description": "Returns 'Hello' to the caller",
        "operationId": "hello",
        "parameters": [{
          "name": "name",
          "in": "query",
          "description": "The name of the person to whom to say hello",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HelloWorldResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Ethsvc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "serviceType": {
          "description": "Ethernet Private (Port Based) or Ethernet Virtual Private (VLAN based)",
          "type": "string",
          "enum": ["EP", "EVP"]
        },
        "cos": {
          "type": "string",
          "enum": ["Gold", "Silver", "Bronze", "scavenger"]
        },
        "bwAmount": {
          "type": "integer",
          "description": "Value specified in Megabits",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        },
        "ennis": {
          "type": "array",
          "xml": {
            "name": "enni",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/enni"
          }
        },
        "unis": {
          "type": "array",
          "xml": {
            "name": "uni",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/uni"
          }
        }
      },
      "required": ["id", "serviceType", "bwAmount", "cos"]
    },
    "enni": {
      "type": "object",
      "properties": {
        "id": {
          "description": "UID of port",
          "type": "integer",
          "format": "int64"
        },
        "ethertype": {
          "description": "Ethertype handoff desired by customer",
          "type": "string",
          "enum": ["88A8", "9100", "8100"]
        },
        "svid": {
          "type": "string"
        }
      },
      "xml": {
        "name": "enni"
      }
    },
    "uni": {
      "type": "object",
      "properties": {
        "id": {
          "description": "UID of port",
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "uni"
      }
    },
    "Error": {
      "type": "object",
      "required": ["code", "message"],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "HelloWorldResponse": {
      "required": ["message"],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "required": ["message"],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}
